"use client";

import { useEffect, useState } from "react";
import { Card, Button, Upload, Typography, Row, Col, Empty, Image } from "antd";
import { UploadChangeParam } from "antd/es/upload/interface";
import { UploadOutlined, PlusOutlined } from "@ant-design/icons";
import { useRouter } from "next/navigation";

const { Title, Text } = Typography;
interface CV {
  id: number;
  name: string;
  image?: string; // ·∫£nh l√† t√πy ch·ªçn, c√≥ th·ªÉ kh√¥ng c√≥
  positionApply?: string;
  createdAt?: string;
}

const CVManager = () => {
  const router = useRouter();
  const [uploadedCVs, setUploadedCVs] = useState<{ id: number; name: string }[]>([]);
  const [image, setImage] = useState<string | null>(null); // Khai b√°o state image
  const [cvData, setCvData] = useState<CV[]>([]); // Khai b√°o state cvData

  
  useEffect(() => {
    // L·∫•y d·ªØ li·ªáu CV ƒë√£ l∆∞u trong sessionStorage
    const savedCvData = JSON.parse(sessionStorage.getItem("cvData") || "[]");
    setCvData(Array.isArray(savedCvData) ? savedCvData : []);

    // L·∫•y ·∫£nh ƒë√£ l∆∞u trong sessionStorage v√† hi·ªÉn th·ªã
    const savedImage = sessionStorage.getItem("cvImage");
    if (savedImage) {
        setImage(savedImage); // C·∫≠p nh·∫≠t l·∫°i ·∫£nh ƒë√£ l∆∞u
    };
  }, []);

  const createNewCV = () => {
    router.push("/candidate/CVManagement/CV");
  };

  const handleUpload = (info: UploadChangeParam) => {
    const file = info.file;
    const newCV = { id: Date.now(), name: file.name };
    const updatedCVs = [...uploadedCVs, newCV];
    setUploadedCVs(updatedCVs);
    sessionStorage.setItem("uploadedCVs", JSON.stringify(updatedCVs));
  };
  const handleDeleteCV = (index: number) => {
      // L·∫•y danh s√°ch CV hi·ªán t·∫°i t·ª´ sessionStorage
    const updatedCvData = JSON.parse(sessionStorage.getItem("cvData") || "[]");
      // X√≥a CV t·∫°i v·ªã tr√≠ ch·ªâ ƒë·ªãnh
    updatedCvData.splice(index, 1);
      // C·∫≠p nh·∫≠t l·∫°i sessionStorage v·ªõi danh s√°ch CV m·ªõi
    sessionStorage.setItem("cvData", JSON.stringify(updatedCvData));
      // C·∫≠p nh·∫≠t state cvData ƒë·ªÉ re-render l·∫°i giao di·ªán
    setCvData(updatedCvData);
    alert("CV ƒë√£ ƒë∆∞·ª£c x√≥a!");
  };

  const handleViewDetails = (cv: CV) => {
    // Chuy·ªÉn h∆∞·ªõng ƒë·∫øn trang chi ti·∫øt v·ªõi d·ªØ li·ªáu CV
    router.push(`/candidate/CVManagerment/CV?cvId=${cv.id}`);
  };
  
  return (
    <div style={{ maxWidth: "900px", margin: "auto", padding: "20px" }}>
      <Title level={2} style={{ textAlign: "center", marginBottom: "20px" }}>
        üìÑ Qu·∫£n l√Ω CV
      </Title>

      {/* CV ƒë√£ t·∫°o */}
      <Card title="CV ƒë√£ t·∫°o tr√™n h·ªá th·ªëng" style={{ marginBottom: "20px", width: "1100px" }}>
          {cvData.length === 0 ? (
              <Empty description="B·∫°n ch∆∞a t·∫°o CV n√†o" />
          ) : (
              <Row gutter={[16, 16]}>
                  {cvData.map((cv, index) => (
                      <Col xs={24} sm={12} md={8} lg={6} key={index}>
                          <Card 
                              hoverable
                              style={{ 
                                  background: "#ffffff", 
                                  borderRadius: "8px", 
                                  boxShadow: "0 4px 8px rgba(0, 0, 0, 0.1)",
                                  transition: "transform 0.2s ease-in-out",
                                  width: "100%", // ƒê·∫£m b·∫£o card chi·∫øm h·∫øt chi·ªÅu r·ªông
                              }}
                              cover={
                                <Image
                                  src={cv.image}
                                  alt="Avatar"
                                   // K√≠ch th∆∞·ªõc height b·∫°n mu·ªën
                                  style={{
                                    objectFit: "cover",
                                    borderRadius: "8px 8px 0 0",
                                    width:"100%",
                                    height:"150px"
                                  }}
                                />
                              }
                          >
                              <div >
                                  <Title level={4} style={{ marginBottom: "5px" }}>
                                      {cv.name || "Ch∆∞a c√≥ ti√™u ƒë·ªÅ"}
                                  </Title>
                                  <Text type="secondary" style={{ display: "block" }}>
                                      <strong>V·ªã tr√≠:</strong> {cv.positionApply || "Ch∆∞a c√≥ v·ªã tr√≠"}
                                  </Text>
                                  <Text type="secondary" style={{ display: "block", marginBottom: "10px" }}>
                                      <strong>Ng√†y t·∫°o:</strong> {cv.createdAt ? new Date(cv.createdAt).toLocaleDateString() : "Kh√¥ng r√µ"}
                                  </Text>
                              </div>
                              <div style={{ textAlign: "center", marginTop: "10px"}}>
                                  <Row gutter={8}>
                                      <Col span={12}>
                                          <Button
                                              type="primary"
                                              onClick={()=>handleViewDetails}
                                              style={{ width: "100px", marginRight:"10px" }}
                                          >
                                              Xem chi ti·∫øt
                                          </Button>
                                      </Col>
                                      <Col span={12}>
                                          <Button
                                              type="default"
                                              danger={true}
                                              onClick={() => handleDeleteCV(index)}
                                              style={{ width: "100%" }}
                                          >
                                              X√≥a
                                          </Button>
                                      </Col>
                                  </Row>
                              </div>
                          </Card>
                      </Col>
                  ))}
              </Row>
          )}
          <div style={{ textAlign: "left", marginTop: "20px" }}>
              <Button type="primary" icon={<PlusOutlined />} onClick={createNewCV}>
                  T·∫°o m·ªõi
              </Button>
          </div>
      </Card>

      {/* CV ƒë√£ t·∫£i l√™n */}
      <Card title="CV ƒë√£ t·∫£i l√™n">
        {uploadedCVs.length === 0 ? <Empty description="B·∫°n ch∆∞a t·∫£i l√™n CV n√†o" /> : uploadedCVs.map((cv) => <p key={cv.id}>{cv.name}</p>)}
        <Upload beforeUpload={() => false} onChange={handleUpload}>
          <Button icon={<UploadOutlined />}>T·∫£i CV l√™n</Button>
        </Upload>
      </Card>
    </div>
  );
};

export default CVManager;