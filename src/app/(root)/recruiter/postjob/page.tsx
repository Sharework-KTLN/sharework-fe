'use client';

import React from 'react';
import { formatDate } from '@/utils/dateUltil';
import { useState, useEffect } from 'react';
import { useDispatch, useSelector } from 'react-redux';
import { RootState, AppDispatch } from '@/redux/store';
import { Form, Input, Select, Avatar, DatePicker } from 'antd';
import CustomButton from '@/components/CustomButton';
import { Company } from '@/types/company';


const { Option } = Select;

const PostJobPage = () => {

    const [form] = Form.useForm();
    const user = useSelector((state: RootState) => state.user);
    const [company, setCompany] = useState<Company | null>(null);

    // G·ªçi API ƒë·ªÉ l·∫•y th√¥ng tin c√¥ng ty ngay khi component ƒë∆∞·ª£c render
    useEffect(() => {
        const fetchCompany = async () => {
            try {
                const companyRes = await fetch(`http://localhost:8080/companies/recruiter/${user.id}`);

                if (!companyRes.ok) {
                    throw new Error("Kh√¥ng t√¨m th·∫•y c√¥ng ty c·ªßa b·∫°n!");
                }

                const companyData = await companyRes.json();
                setCompany(companyData); // L∆∞u th√¥ng tin c√¥ng ty v√†o state
            } catch (error) {
                console.error("L·ªói khi l·∫•y d·ªØ li·ªáu c√¥ng ty:", error);
            }
        };

        if (user?.id) {
            fetchCompany();
        }
    }, [user?.id]); // Ch·ªâ ch·∫°y l·∫°i khi user.id thay ƒë·ªïi

    const handleButtonPostJob = () => {
        form
            .validateFields()
            .then((values) => {
                onFinish(values);
            })
            .catch((info) => {
                console.log('Validate Failed:', info);
            });
    };

    const onFinish = async (values: Record<string, unknown>) => {
        try {
            // üîπ G·ªçi API ƒë·ªÉ t·∫°o b√†i ƒëƒÉng
            const response = await fetch("http://localhost:8080/jobs", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify({
                    ...values,
                    recruiter_id: user?.id, // üî• Thay b·∫±ng ID th·∫≠t n·∫øu c√≥
                    company_id: company?.id,   // üî• Thay b·∫±ng ID th·∫≠t n·∫øu c√≥
                }),
            });
            const data = await response.json();

            if (response.ok) {
                alert("ƒêƒÉng b√†i tuy·ªÉn d·ª•ng th√†nh c√¥ng!");
                form.resetFields();  // üî• X√≥a d·ªØ li·ªáu trong form sau khi ƒëƒÉng th√†nh c√¥ng
            } else {
                alert("L·ªói khi ƒëƒÉng b√†i: " + data.message);
            }
        } catch (error) {
            console.error("L·ªói khi g·ª≠i request:", error);
            alert("C√≥ l·ªói x·∫£y ra, vui l√≤ng th·ª≠ l·∫°i sau.");
        }
    };
    return (
        <div
            style={{
                width: '100%',
                minHeight: '100vh',
                backgroundColor: '#F5F4F9',
                paddingTop: '5px',
                msOverflowY: 'scroll',
                padding: '20px',
            }}
        >
            <div
                style={{
                    width: '90%',
                    height: '100px',
                    marginLeft: '5%',
                    border: '1px solid gray',
                    borderRadius: '8px',
                    backgroundColor: '#FFFFFF',
                    display: 'flex',
                    alignItems: 'center',
                    padding: '10px 20px',
                    gap: '20px', // Kho·∫£ng c√°ch gi·ªØa c√°c ph·∫ßn
                }}
            >
                {/* Ph·∫ßn Avatar + Th√¥ng tin nh√† tuy·ªÉn d·ª•ng (50%) */}
                <div style={{ display: 'flex', alignItems: 'center', width: '50%' }}>
                    <Avatar
                        size={70}
                        src="https://cdn-icons-png.flaticon.com/512/3135/3135715.png"
                        alt="Recruiter Avatar"
                    />
                    <div style={{ marginLeft: '15px' }}>
                        <p style={{ fontSize: '16px', fontWeight: 'bold', margin: 0 }}>{user.full_name}</p>
                        <p style={{ fontSize: '14px', color: '#666', margin: '4px 0' }}>
                            M√£ nh√† tuy·ªÉn d·ª•ng:
                        </p>
                        <p style={{ fontSize: '14px', color: '#666', margin: 0 }}>
                            {user.email}
                        </p>
                    </div>
                </div>

                {/* Ph·∫ßn th√¥ng tin c√¥ng ty (50%) */}
                <div style={{ width: '50%' }}>
                    <p style={{ fontSize: '16px', color: '#666', margin: 0 }}>T√™n c√¥ng ty:</p>
                    <p style={{ fontSize: '16px', fontWeight: 'bold', color: 'black', margin: '4px 0' }}>
                        {company?.name}
                    </p>
                </div>
            </div>

            <div
                style={{
                    width: '90%',
                    minHeight: '100vh', // ‚úÖ Cho ph√©p m·ªü r·ªông theo n·ªôi dung
                    marginLeft: '5%',
                    marginTop: '10px',
                    border: '1px solid gray',
                    borderRadius: '5px',
                    backgroundColor: '#FFF',
                    padding: '20px',
                    overflowY: 'auto', // ‚úÖ K√≠ch ho·∫°t thanh cu·ªôn n·∫øu n·ªôi dung qu√° d√†i
                    display: 'flex',
                    flexDirection: 'column', // ‚úÖ ƒê·∫£m b·∫£o Form kh√¥ng b·ªã k√©o d√†i
                }}
            >
                <p
                    className='text-base font-bold mt-2'
                >
                    Nhu c·∫ßu tuy·ªÉn d·ª•ng c·ªßa b·∫°n l√† g√¨?
                </p>

                <Form
                    form={form}
                    layout="vertical"
                    style={{
                        marginTop: '20px'
                    }}
                >
                    {/* V·ªã tr√≠ c·∫ßn tuy·ªÉn */}
                    <Form.Item
                        name="title"
                        label="V·ªã tr√≠ c·∫ßn tuy·ªÉn"
                        rules={[{ required: true, message: 'H√£y nh·∫≠p v·ªã tr√≠!' }]}
                    >
                        <Input placeholder="Nh·∫≠p v·ªã tr√≠" />
                    </Form.Item>

                    {/* Y√™u c·∫ßu k·ªπ nƒÉng & S·ªë l∆∞·ª£ng */}
                    <div style={{ display: 'flex', gap: '10px' }}>
                        <Form.Item
                            name="required_skills"
                            label="Y√™u c·∫ßu k·ªπ nƒÉng"
                            style={{ flex: 1 }}
                            rules={[{ required: true, message: 'H√£y nh·∫≠p k·ªπ nƒÉng y√™u c·∫ßu!' }]}
                        >
                            <Input placeholder="Nh·∫≠p k·ªπ nƒÉng y√™u c·∫ßu" />
                        </Form.Item>
                        <Form.Item
                            name="vacancies"
                            label="S·ªë l∆∞·ª£ng"
                            style={{ flex: 1 }}
                        // rules={[{ required: true, type: 'number', min: 1, message: 'S·ªë l∆∞·ª£ng ph·∫£i l·ªõn h∆°n 0!' }]}
                        >
                            <Input type="number" placeholder="Nh·∫≠p s·ªë l∆∞·ª£ng" />
                        </Form.Item>
                    </div>

                    {/* Lƒ©nh v·ª±c, M·ª©c l∆∞∆°ng, H√¨nh th·ª©c l∆∞∆°ng, H·∫°n b√†i ƒëƒÉng */}
                    <div style={{ display: 'flex', gap: '10px' }}>
                        <Form.Item
                            name="industry"
                            label="Lƒ©nh v·ª±c"
                            style={{ flex: 1 }}
                            rules={[{ required: true, message: 'H√£y ch·ªçn lƒ©nh v·ª±c!' }]}
                        >
                            <Select>
                                <Option value="it">C√¥ng ngh·ªá th√¥ng tin</Option>
                                <Option value="marketing">Marketing</Option>
                            </Select>
                        </Form.Item>
                        <Form.Item
                            name="salary_range"
                            label="M·ª©c l∆∞∆°ng"
                            style={{ flex: 1 }}
                            rules={[{ required: true, message: 'H√£y ch·ªçn m·ª©c l∆∞∆°ng!' }]}
                        >
                            <Select>
                                <Option value="negotiable">Th·ªèa thu·∫≠n</Option>
                                <Option value="100">100$</Option>
                            </Select>
                        </Form.Item>
                        <Form.Item
                            name="salary_type"
                            label="H√¨nh th·ª©c l∆∞∆°ng"
                            style={{ flex: 1 }}
                            rules={[{ required: true, message: 'H√£y ch·ªçn h√¨nh th·ª©c l∆∞∆°ng!' }]}
                        >
                            <Select>
                                <Option value="vnd_month">VND/th√°ng</Option>
                                <Option value="vnd_week">VND/tu·∫ßn</Option>
                            </Select>
                        </Form.Item>
                        <Form.Item
                            name="deadline"
                            label="H·∫°n b√†i ƒëƒÉng"
                            style={{ flex: 1 }}
                            rules={[{ required: true, message: 'H√£y ch·ªçn h·∫°n b√†i ƒëƒÉng!' }]}
                        >
                            <DatePicker
                                format="DD-MM-YYYY"
                                placeholder="Ch·ªçn ng√†y"
                                onChange={(date) => console.log('Ng√†y ƒë√£ ch·ªçn:', formatDate(date))}
                                style={{ width: '100%' }}
                            />
                        </Form.Item>
                    </div>

                    {/* H√¨nh th·ª©c l√†m vi·ªác */}
                    <Form.Item
                        name="work_type"
                        label="H√¨nh th·ª©c l√†m vi·ªác"
                        rules={[{ required: true, message: 'H√£y ch·ªçn √≠t nh·∫•t 1 h√¨nh th·ª©c l√†m vi·ªác!' }]}
                    >
                        <div>
                            <label><input type="checkbox" value="fulltime" /> Full-time</label> &nbsp;
                            <label><input type="checkbox" value="parttime" /> Part-time</label> &nbsp;
                            <label><input type="checkbox" value="onsite" /> Onsite</label> &nbsp;
                            <label><input type="checkbox" value="hybrid" /> Hybrid</label>
                        </div>
                    </Form.Item>

                    {/* ƒê·ªãa ch·ªâ l√†m vi·ªác */}
                    <Form.Item
                        name="work_location"
                        label="ƒê·ªãa ch·ªâ l√†m vi·ªác"
                    >
                        <Input.TextArea
                            placeholder="Nh·∫≠p ƒë·ªãa ch·ªâ"
                            autoSize={{ minRows: 2, maxRows: 5 }} // Tu·ª≥ ch·ªânh ƒë·ªô cao
                            style={{
                                fontSize: '14px', // K√≠ch th∆∞·ªõc ch·ªØ
                                fontFamily: 'Arial, sans-serif', // Font ch·ªØ
                                fontWeight: '500px' // ƒê·ªô ƒë·∫≠m c·ªßa ch·ªØ (t√πy ch·ªânh n·∫øu c·∫ßn)
                            }}
                        />
                    </Form.Item>
                    {/* Th·ªùi gian l√†m vi·ªác */}
                    <Form.Item
                        name="work_schedule"
                        label="Th·ªùi gian l√†m vi·ªác"
                    >
                        <Input.TextArea
                            placeholder="Nh·∫≠p th·ªùi gian l√†m vi·ªác"
                            autoSize={{ minRows: 2, maxRows: 5 }} // Tu·ª≥ ch·ªânh ƒë·ªô cao
                            style={{
                                fontSize: '14px', // K√≠ch th∆∞·ªõc ch·ªØ
                                fontFamily: 'Arial, sans-serif', // Font ch·ªØ
                                fontWeight: '500px' // ƒê·ªô ƒë·∫≠m c·ªßa ch·ªØ (t√πy ch·ªânh n·∫øu c·∫ßn)
                            }}
                        />
                    </Form.Item>
                    {/* M√¥ t·∫£ c√¥ng vi·ªác vi·ªác */}
                    <Form.Item
                        name="description"
                        label="M√¥ t·∫£ c√¥ng vi·ªác"
                    >
                        <Input.TextArea
                            placeholder="Nh·∫≠p m√¥ t·∫£ c√¥ng vi·ªác"
                            autoSize={{ minRows: 2, maxRows: 5 }} // Tu·ª≥ ch·ªânh ƒë·ªô cao
                            style={{
                                fontSize: '14px', // K√≠ch th∆∞·ªõc ch·ªØ
                                fontFamily: 'Arial, sans-serif', // Font ch·ªØ
                                fontWeight: '500px' // ƒê·ªô ƒë·∫≠m c·ªßa ch·ªØ (t√πy ch·ªânh n·∫øu c·∫ßn)
                            }}
                        />
                    </Form.Item>
                    {/* Submit Button */}
                    <Form.Item
                        style={{ textAlign: 'right' }}
                    >
                        <CustomButton
                            text="ƒêƒÉng tuy·ªÉn"
                            onClick={handleButtonPostJob}
                            backgroundColor="green"
                            hoverColor="darkgreen"
                            textColor="white"
                            style={{
                                width: '150px',
                                fontSize: 15,
                                fontWeight: 'bold',
                                font: 'Arial, sans-serif',
                                right: 0,
                            }}
                        />
                    </Form.Item>
                </Form>
            </div>
        </div>
    );
};

export default PostJobPage;
